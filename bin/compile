#!/bin/bash

set -e

export BUILD_DIR=$1
export CACHE_DIR=$2
export ENV_DIR=$3

if [ ! -f "$ENV_DIR/GITHUB_ORG" ]; then
  echo 'Run heroku config:add GITHUB_ORG to set the GitHub organization'
  exit 1
fi
if [ ! -f "$ENV_DIR/GITHUB_REPO" ]; then
  echo 'Run heroku config:add GITHUB_REPO to set the GitHub repository'
  exit 1
fi
if [ ! -f "$ENV_DIR/GIT_CREDENTIALS" ]; then
  echo 'Run heroku config:add GIT_CREDENTIALS to set the Git credentials'
  exit 1
fi

GITHUB_ORG=$(cat "$ENV_DIR/GITHUB_ORG")
GITHUB_REPO=$(cat "$ENV_DIR/GITHUB_REPO")
GIT_CREDENTIALS=$(cat "$ENV_DIR/GIT_CREDENTIALS")

cp "$ENV_DIR/GIT_CREDENTIALS" ~/.git-credentials
git config --global credential.helper "store --file ~/.git-credentials"

SETUP_SCRIPT="testbot/setup.sh"
if [ -f "$ENV_DIR/SETUP_SCRIPT" ]; then
  SETUP_SCRIPT=$(cat "$ENV_DIR/SETUP_SCRIPT")
fi

if [ ! -f "$CACHE_DIR/$GITHUB_ORG-$GITHUB_REPO" ]; then
    git clone "https://github.com/$GITHUB_ORG/$GITHUB_REPO.git" "$GITHUB_ORG-$GITHUB_REPO"
fi
REPO_DIR="$CACHE_DIR/$GITHUB_ORG-$GITHUB_REPO"
cd $REPO_DIR
git pull

if [ -f "$REPO_DIR/testbot/Aptfile" ]; then
  BIN_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
  $BIN_DIR/compile-apt $REPO_DIR/testbot $CACHE_DIR
fi

if [ ! -f "$SETUP_SCRIPT" ]; then
  echo "Couldn't find $SETUP_SCRIPT in $GITHUB_ORG/$GITHUB_REPO"
  exit 1
fi

eval bash "$SETUP_SCRIPT $BUILD_DIR $CACHE_DIR"
